top_n(n = 10, wt = avg_logFC))
subset(WT.combined, idents = c(1:19))
subset(WT.combined, idents = c(1:9))
WT.combined <- subset(WT.combined, idents = c(1:9))
WT.combined <- WT.combined %>%
NormalizeData() %>%
FindVariableFeatures(selection.method = "vst",
nfeatures = 2000, verbose = FALSE) %>%
ScaleData() %>%
RunPCA(npcs = 200)
WT.combined1 <- RunFastMNN(
SplitObject(object = WT.combined, split.by = 'sample'),
)
WT.combined@reductions$mnn <- WT.combined1@reductions$mnn
rm(WT.combined1)
ggplot2::qplot(WT.combined@reductions$mnn@cell.embeddings[,1],
WT.combined@reductions$mnn@cell.embeddings[,2],
col = WT.combined$sample)
ggplot2::qplot(WT.combined@reductions$mnn@cell.embeddings[,1],
WT.combined@reductions$mnn@cell.embeddings[,2],
col = WT.combined$tissue)
library(SeuratData)
library(SeuratWrappers)
WT.combined1 <- RunFastMNN(
SplitObject(object = WT.combined, split.by = 'sample'),
)
WT.combined@reductions$mnn <- WT.combined1@reductions$mnn
rm(WT.combined1)
ggplot2::qplot(WT.combined@reductions$mnn@cell.embeddings[,1],
WT.combined@reductions$mnn@cell.embeddings[,2],
col = WT.combined$tissue)
plot(WT.combined@reductions$mnn@cell.embeddings)
dims <- 50
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
WT.combined <- FindNeighbors(WT.combined,
reduction = 'mnn',
dims = 1:dims)
WT.combined <- FindClusters(WT.combined,
resolution = 0.45)
DimPlot(WT.combined,
label = T,
ncol = 3)
dims <- 60
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
WT.combined <- FindNeighbors(WT.combined,
reduction = 'mnn',
dims = 1:dims)
WT.combined <- FindClusters(WT.combined,
resolution = 0.45)
DimPlot(WT.combined,
group.by = c("sample", "ident", "tissue"),
label = T,
ncol = 3)
dims <- 60
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
dims <- 45
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
WT.combined <- FindNeighbors(WT.combined,
reduction = 'mnn',
dims = 1:dims)
WT.combined <- FindClusters(WT.combined,
resolution = 0.45)
DimPlot(WT.combined,
group.by = c("sample", "ident", "tissue"),
label = T,
ncol = 3)
load("/Users/kbl105/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/WT.combined.RData")
DimPlot(WT.combined,
label = T,
ncol = 3)
DimPlot(WT.combined,
group.by = c("sample", "ident", "tissue"),
label = T,
ncol = 3)
ggplot2::qplot(WT.combined@reductions$mnn@cell.embeddings[,1],
WT.combined@reductions$mnn@cell.embeddings[,2],
col = WT.combined$tissue)
DimPlot(WT.combined,
label = T,
ncol = 3)
DimPlot(subset(WT.combined, idents = c(1:9)),
label = T,
ncol = 3)
DimPlot(subset(WT.combined, idents = c(0:9)),
label = T,
ncol = 3)
WT.combined <- subset(WT.combined, idents = c(0:9))
WT.combined1 <- RunFastMNN(
SplitObject(object = WT.combined, split.by = 'sample'),
verbose = T
)
WT.combined@reductions$mnn <- WT.combined1@reductions$mnn
rm(WT.combined1)
ggplot2::qplot(WT.combined@reductions$mnn@cell.embeddings[,1],
WT.combined@reductions$mnn@cell.embeddings[,2],
col = WT.combined$tissue)
dims <- 45
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
WT.combined <- FindNeighbors(WT.combined,
reduction = 'mnn',
dims = 1:dims)
WT.combined <- FindClusters(WT.combined,
resolution = 0.45)
DimPlot(WT.combined,
label = T,
ncol = 3)
dims <- 50
WT.combined <- RunUMAP(WT.combined,
reduction = "mnn",
#n.neighbors = 20,
#min.dist = 0.5,
dims = 1:dims)
WT.combined <- FindNeighbors(WT.combined,
reduction = 'mnn',
dims = 1:dims)
WT.combined <- FindClusters(WT.combined,
resolution = 0.45)
DimPlot(WT.combined,
label = T,
ncol = 3)
WT.combined <- FindClusters(WT.combined,
resolution = 0.5)
DimPlot(WT.combined,
label = T,
ncol = 3)
DimPlot(WT.combined,
reduction = "umap",
split.by = "tissue")
WT.combined@reductions
WT.combined.markers2 <- FindAllMarkers(WT.combined, test.use = 'poisson',
only.pos = F, latent.vars = c('sample', 'tissue'),
min.pct = 0.25,
logfc.threshold = 0.25)
rimmi.rnaseq::markers_to_xls(WT.combined.markers2, '~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN//WT_LNs_MNN_cleaned_control_batch_tissue')
FeaturePlot(object = WT.combined,pt.size = 2,
features= c("L1CAM"),
cols = c("grey", "red"),
reduction = "umap")
FeaturePlot(object = WT.combined,
features= c("CR1", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
grep('^CR',rownames(WT.combined@assays$RNA@counts), value = T)
grep('^CR[0-9].',rownames(WT.combined@assays$RNA@counts), value = T)
grep('^CR[0-9]',rownames(WT.combined@assays$RNA@counts), value = T)
FeaturePlot(object = WT.combined,
features= c("CR1L", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
grep('FDC',rownames(WT.combined@assays$RNA@counts), value = T)
FeaturePlot(object = WT.combined,
features= c("WFDC2", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
FeaturePlot(object = WT.combined,
features= c("IL4I1", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
setwd('~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN//')
sample.name <- 'WT LNs MNN'
# glial cells
jpeg(
paste0(sample.name, ' Glia.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("L1CAM"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# cd34+
jpeg(
paste0(sample.name, ' CD34+ SC.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("CD34", "IL6"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# T-zone reticular cells?
jpeg(
paste0(sample.name, ' T-zone FRC.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("CCL21A", "IL7", "CCL19", 'CXCL9'),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# T-zone reticular cells?
jpeg(
paste0(sample.name, 'CCL19 gradient.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
features= c("CCL19"),
cols = c("grey", "red"),
pt.size = 5,
min.cutoff = 'q3',
max.cutoff = 'q97',
reduction = "umap")
dev.off()
# Myofibroblast / # ITGA7+ pericite ?
jpeg(
paste0(sample.name, ' Myo and PVC.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("ACTA2", "TAGLN", "ITGA7", "MYH11", "SMTN"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
#Marginal reticular cells?
jpeg(
paste0(sample.name, ' MRC.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("TNFSF11", "TNFSF13B", 'CXCL13', 'MADCAM1'),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# follicular Dendtiric cells?
jpeg(
paste0(sample.name, ' FDC?.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("IL4I1", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# CCL11+ CCLL13+ reticular cells?
jpeg(
paste0(sample.name, ' CCL11 and CCL13+ RC.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("CCL11", "CCL13", "CCL8"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# neuroendo
jpeg(
paste0(sample.name, ' Neuroendo.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("AGT", "F3", "EDNRB"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# neuroendo
jpeg(
paste0(sample.name, ' Neuroendo.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("BST1", "PDPN"),
cols = c("grey", "red"),
reduction = "umap")
dev.off()
DimPlot(WT.combined,
label = T,
ncol = 3)
library(rimmi.rnaseq)
# put gene signatures as new rows to the gene_cell matrix and
put_signature <- function(markers, Seurat_obj, title){
library(Seurat)
### function to have a complete list of markers
complete <- function(markers, Seurat_obj) {
markers <-  as.character(markers[complete.cases(markers)])
markers[markers %in% rownames(Seurat_obj@assays$RNA@data)]
}
### convert it to complete list
markers <- complete(markers, Seurat_obj)
DefaultAssay(Seurat_obj) <- 'RNA'
### function to have the average quantification for all your markers
markers_expr <- function(Seurat_obj, markers) {
q <- AddModuleScore(Seurat_obj, markers)
q <- q@meta.data[grepl("Cluster" ,colnames(q@meta.data))]
rowSums(q) / nrow(q)
}
### put this quantifications to the matrix on Seurat object, among the genes
Seurat_obj@assays$RNA@data <- rbind(markers_expr(Seurat_obj, markers),
Seurat_obj@assays$RNA@data)
### name it
rownames(Seurat_obj@assays$RNA@data)[1] <- title
### return the object with it
Seurat_obj
}
### function to have a complete list of markers
complete <- function(markers, Seurat_obj) {
markers <-  as.character(markers[complete.cases(markers)])
markers[markers %in% rownames(Seurat_obj@assays$RNA@data)]
}
rodda <- openxlsx::read.xlsx("~/Desktop/RIMMI/Urs_GALT_atlas//rodda_paper_markers.xlsx")
rodda <- as.data.frame(apply(rodda, 2, toupper))
Ccl19hi.TRC <- complete(rodda$Ccl19hi.TRC, WT.combined)
Ccl19lo.TRC <- complete(rodda$Ccl19lo.TRC, WT.combined)
Cxcl9pl.TRC <- complete(rodda$`Cxcl9+.TRC`, WT.combined)
MRC <- complete(rodda$MRC, WT.combined)
PvC <- complete(rodda$PvC, WT.combined)
CD34_SC <- complete(rodda$`CD34+SC`, WT.combined)
Inmt_SC <- complete(rodda$`Inmt+SC`, WT.combined)
Nr4a1_SC <- complete(rodda$`Nr4a1+SC`, WT.combined)
FDC <- complete(rodda$FDC, WT.combined)
roddas <- list(Ccl19hi.TRC, Ccl19lo.TRC, Cxcl9pl.TRC, MRC, PvC, CD34_SC, Inmt_SC, Nr4a1_SC, FDC)
names(roddas) <- paste(colnames(rodda), " : Rodda's paper")
WT.combined1 <- WT.combined
for (i in 1:length(roddas)){
WT.combined1 <- put_signature(roddas[[i]],
WT.combined1,
#assay = 'integrated',
names(roddas)[i]
)
}
rm(WT.combined1)
plot_multi <- FeaturePlot(WT.combined1,
unique(names(roddas)),
cols = c("grey", "blue"),
min.cutoff = "q10",
max.cutoff = "q90",
reduction= 'umap')
plot_multi
WT.combined1 <- WT.combined
for (i in 1:length(roddas)){
WT.combined1 <- put_signature(roddas[[i]],
WT.combined1,
#assay = 'integrated',
names(roddas)[i]
)
}
plot_multi <- FeaturePlot(WT.combined1,
unique(names(roddas)),
cols = c("grey", "blue"),
min.cutoff = "q10",
max.cutoff = "q90",
reduction= 'umap')
plot_multi
rm(WT.combined1)
ggsave(plot = p1, filename = '~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN/MNN_corrected_batches_WTstroma.jpg')
p1 <- DimPlot(WT.combined,
group.by = c("sample", "ident", "tissue"),
label = T,
ncol = 3)
p2 <- DimPlot(WT.combined,
label = T,
ncol = 3)
p3 <- DimPlot(WT.combined,
reduction = "umap",
split.by = "tissue")
ggsave(plot = p1, filename = '~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN/MNN_corrected_batches_WTstroma.jpg')
ggsave(plot = p2, filename = '~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN/MNN_corrected_clusters_WTstroma.jpg')
ggsave(plot = p3, filename = '~/Desktop/RIMMI/Nicole_Cre+:Cre_mice/WT stroma/MNN/MNN_corrected_tissue_split_WTstroma.jpg')
jpeg(
paste0(sample.name, ' FDC?.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
pt.size = 2,
features= c("IL4I1", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
dev.off()
getwd()
# follicular Dendtiric cells?
jpeg(
paste0(sample.name, ' FDC?.jpg'),
width = 1200,
height = 1500
)
FeaturePlot(object = WT.combined,
features= c("IL4I1", "CR2"),
pt.size = 2,
cols = c("grey", "red"),
reduction = "umap")
dev.off()
# CCL11+ CCLL13+ reticular cells?
save(WT.combined, file = "~/Desktop/RIMMI/Urs_GALT_atlas/Healthy_GALT_fused/WT.combined.RData")
View(WT.combined.markers2 %>%
group_by(cluster) %>%
top_n(n = 10, wt = avg_logFC))
umap_plot3d <- function(Seurat_obj,
coloring = c('clusters', 'sample', 'tissue', 'condition'),
reduction = c('pca', 'harmony', 'mnn', 'cca.aligned')){
library(plotly)
library(Seurat)
# recalculate umaps with 3 dimensions
#dims <- Seurat_obj@commands$RunUMAP.RNA.harmony$dims
dims <- Seurat_obj@commands$RunUMAP.RNA.mnn$dims
#dims <- 1:30
Seurat_obj <- RunUMAP(Seurat_obj,
reduction = reduction,
dims = dims,
n.components = 3)
if (coloring == 'clusters'){
coloring <- Idents(Seurat_obj)
} else if (coloring == 'sample'){
coloring <- Seurat_obj$sample
} else if (coloring == 'tissue'){
coloring <- Seurat_obj$tissue
} else if (coloring == 'condition'){
coloring <- Seurat_obj$condition
}
# construct new data frame with umaps and cell identities
df <- data.frame(umap1 = Seurat_obj@reductions$umap@cell.embeddings[,1],
umap2 = Seurat_obj@reductions$umap@cell.embeddings[,2],
umap3 = Seurat_obj@reductions$umap@cell.embeddings[,3],
cell = coloring)
# plot the fancy 3d scatter plot ; D
plot_ly(df, x = ~umap1, y = ~umap2, z = ~umap3, color = ~cell) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'umap 1'),
yaxis = list(title = 'umap 2'),
zaxis = list(title = 'umap 3')))
}
umap_plot3d(WT.combined)
WT.combined@commands$RunUMAP.RNA.mnn$dims
umap_plot3d(WT.combined)
Seurat_obj <- WT.combined
#dims <- 1:30
Seurat_obj <- RunUMAP(Seurat_obj,
reduction = reduction,
dims = dims,
n.components = 3)
rm(Seurat_obj)
umap_plot3d(Seurat_obj = WT.combined, coloring = 'clusters', reduction = 'mnn')
setwd("~/Desktop/RIMMI/RIMMItools/")
library(roxygen2)
library(devtools)
setwd("~/Desktop/RIMMI/RIMMItools/rimmi.rnaseq/")
document()
devtools::install_github(repo = 'GrigoriiNos/rimmi.rnaseq', dependencies = F)
devtools::install_github(repo = 'GrigoriiNos/rimmi.rnaseq', dependencies = F)
rm(WT.combined)
load("/Users/kbl105/Desktop/RIMMI/Urs_GALT_atlas/Healthy_GALT_fused/galt.comb.RData")
FeaturePlot(galt.comb, features = 'CD24', cols = c('grey', 'red'), split.by = 'tissue')
dims <- 45
galt.comb <- RunUMAP(galt.comb,
reduction = "harmony",
dims = 1:dims)
galt.comb <- FindNeighbors(galt.comb,
reduction = 'harmony',
dims = 1:dims)
galt.comb <- FindClusters(galt.comb,
resolution = 0.45)
DimPlot(galt.comb, group.by = c('sample', 'idents'),
reduction = "umap",
split.by = "tissue")
DimPlot(galt.comb, group.by = c('sample', 'idents'),
reduction = "umap",
split.by = "tissue")
galt.comb <- FindClusters(galt.comb,
resolution = 0.45)
DimPlot(galt.comb,
group.by = c("sample", "ident", "tissue"), label = T,
ncol = 3)
galt.comb <- RunUMAP(galt.comb,
reduction = "harmony",
dims = 1:dims)
DimPlot(galt.comb,
group.by = c("sample", "ident", "tissue"), label = T,
ncol = 3)
rm(list=ls())
